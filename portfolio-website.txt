// File structure:
// 
// ├── package.json
// ├── next.config.js
// ├── tailwind.config.js
// ├── public/
// │   └── images/
// │       ├── hero-bg.jpg
// │       └── profile.jpg
// ├── pages/
// │   ├── _app.js
// │   └── index.js
// ├── components/
// │   ├── Layout.js
// │   ├── Navbar.js
// │   ├── Hero.js
// │   ├── About.js
// │   ├── Experience.js
// │   ├── Skills.js
// │   ├── Projects.js
// │   ├── Contact.js
// │   └── Footer.js
// └── styles/
//     └── globals.css

// package.json
{
  "name": "nikhil-portfolio",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "next": "^13.4.19",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "framer-motion": "^10.15.1",
    "react-icons": "^4.10.1",
    "react-intersection-observer": "^9.5.2",
    "tailwindcss": "^3.3.3",
    "postcss": "^8.4.27",
    "autoprefixer": "^10.4.14",
    "typewriter-effect": "^2.20.1"
  },
  "devDependencies": {
    "eslint": "^8.47.0",
    "eslint-config-next": "^13.4.19"
  }
}

// next.config.js
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  swcMinify: true,
}

module.exports = nextConfig

// tailwind.config.js
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        primary: "#0ea5e9",
        secondary: "#6366f1",
        dark: "#0f172a",
        "dark-light": "#1e293b",
        light: "#f8fafc",
      },
      fontFamily: {
        sans: ['Inter', 'sans-serif'],
        mono: ['JetBrains Mono', 'monospace'],
      },
      animation: {
        'bounce-slow': 'bounce 3s infinite',
      }
    },
  },
  plugins: [],
}

// styles/globals.css
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=JetBrains+Mono:wght@100;200;300;400;500;600;700;800&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-behavior: smooth;
  scroll-padding-top: 5rem;
}

body {
  @apply bg-dark text-light;
}

/* Scrollbar styling */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  @apply bg-dark;
}

::-webkit-scrollbar-thumb {
  @apply bg-primary/50 rounded-full;
}

::-webkit-scrollbar-thumb:hover {
  @apply bg-primary;
}

.highlight {
  @apply text-primary font-medium;
}

.section-title {
  @apply text-3xl font-bold mb-10 relative after:content-[''] after:absolute after:h-1 after:w-24 after:bg-primary after:left-0 after:-bottom-2 sm:text-4xl;
}

.btn {
  @apply px-6 py-3 rounded-md font-medium transition-all duration-300 inline-block;
}

.btn-primary {
  @apply bg-primary text-dark hover:bg-primary/80;
}

.btn-outline {
  @apply border-2 border-primary text-primary hover:bg-primary hover:text-dark;
}

.card {
  @apply bg-dark-light p-6 rounded-lg transition-all duration-300 border border-transparent hover:border-primary/30;
}

.skill-item {
  @apply bg-dark-light px-4 py-2 rounded-md text-sm flex items-center space-x-2 border border-transparent hover:border-primary/50 transition-all duration-300;
}

/* pages/_app.js */
import '../styles/globals.css';
import { AnimatePresence } from 'framer-motion';
import Layout from '../components/Layout';

function MyApp({ Component, pageProps, router }) {
  return (
    <AnimatePresence mode="wait">
      <Layout>
        <Component {...pageProps} key={router.route} />
      </Layout>
    </AnimatePresence>
  );
}

export default MyApp;

// pages/index.js
import Head from 'next/head';
import Hero from '../components/Hero';
import About from '../components/About';
import Experience from '../components/Experience';
import Skills from '../components/Skills';
import Projects from '../components/Projects';
import Contact from '../components/Contact';

export default function Home() {
  return (
    <>
      <Head>
        <title>Nikhil Chavan | Portfolio</title>
        <meta name="description" content="Portfolio website of Nikhil Chavan - Software Developer, Machine Learning Enthusiast" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Hero />
      <About />
      <Experience />
      <Skills />
      <Projects />
      <Contact />
    </>
  );
}

// components/Layout.js
import { motion } from 'framer-motion';
import Navbar from './Navbar';
import Footer from './Footer';

export default function Layout({ children }) {
  return (
    <div className="min-h-screen flex flex-col">
      <Navbar />
      <motion.main
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        exit={{ opacity: 0, y: 20 }}
        transition={{ duration: 0.5 }}
        className="flex-grow"
      >
        {children}
      </motion.main>
      <Footer />
    </div>
  );
}

// components/Navbar.js
import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { FiMenu, FiX } from 'react-icons/fi';

export default function Navbar() {
  const [isOpen, setIsOpen] = useState(false);
  const [scrolled, setScrolled] = useState(false);
  
  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 50) {
        setScrolled(true);
      } else {
        setScrolled(false);
      }
    };
    
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);
  
  const navLinks = [
    { title: 'Home', href: '#home' },
    { title: 'About', href: '#about' },
    { title: 'Experience', href: '#experience' },
    { title: 'Skills', href: '#skills' },
    { title: 'Projects', href: '#projects' },
    { title: 'Contact', href: '#contact' },
  ];
  
  const navVariants = {
    hidden: { opacity: 0, y: -20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.5,
        staggerChildren: 0.1,
        delayChildren: 0.3,
      },
    },
  };
  
  const itemVariants = {
    hidden: { opacity: 0, y: -20 },
    visible: { opacity: 1, y: 0 },
  };
  
  return (
    <header 
      className={`fixed w-full z-50 transition-all duration-300 ${
        scrolled ? 'bg-dark/90 backdrop-blur-md shadow-lg py-2' : 'bg-transparent py-4'
      }`}
    >
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between">
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5 }}
            className="text-xl font-bold"
          >
            <a href="#home" className="flex items-center">
              <span className="text-primary">Nikhil</span>
              <span className="ml-1">Chavan</span>
            </a>
          </motion.div>
          
          {/* Desktop Navigation */}
          <motion.nav
            variants={navVariants}
            initial="hidden"
            animate="visible"
            className="hidden md:flex space-x-8"
          >
            {navLinks.map((link) => (
              <motion.a
                key={link.title}
                href={link.href}
                variants={itemVariants}
                className="relative text-light hover:text-primary transition-colors duration-300 after:content-[''] after:absolute after:w-0 after:h-0.5 after:bg-primary after:left-0 after:bottom-0 after:transition-all after:duration-300 hover:after:w-full"
              >
                {link.title}
              </motion.a>
            ))}
          </motion.nav>
          
          {/* Mobile Navigation Button */}
          <motion.div 
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5 }}
            className="block md:hidden"
          >
            <button 
              onClick={() => setIsOpen(!isOpen)}
              className="text-light focus:outline-none"
            >
              {isOpen ? (
                <FiX className="w-6 h-6" />
              ) : (
                <FiMenu className="w-6 h-6" />
              )}
            </button>
          </motion.div>
        </div>
      </div>
      
      {/* Mobile Navigation Menu */}
      {isOpen && (
        <motion.div
          initial={{ opacity: 0, height: 0 }}
          animate={{ opacity: 1, height: 'auto' }}
          exit={{ opacity: 0, height: 0 }}
          transition={{ duration: 0.3 }}
          className="bg-dark-light backdrop-blur-md shadow-lg md:hidden"
        >
          <div className="container mx-auto px-4 py-4">
            <nav className="flex flex-col space-y-4">
              {navLinks.map((link) => (
                <a
                  key={link.title}
                  href={link.href}
                  onClick={() => setIsOpen(false)}
                  className="py-2 hover:text-primary transition-colors duration-300"
                >
                  {link.title}
                </a>
              ))}
            </nav>
          </div>
        </motion.div>
      )}
    </header>
  );
}

// components/Hero.js
import { motion } from 'framer-motion';
import TypewriterEffect from 'typewriter-effect';
import { FiArrowDown, FiGithub, FiLinkedin, FiCode } from 'react-icons/fi';

export default function Hero() {
  const socialLinks = [
    { icon: <FiGithub />, href: "https://github.com/YOUR_GITHUB", label: "GitHub" },
    { icon: <FiLinkedin />, href: "https://linkedin.com/in/YOUR_LINKEDIN", label: "LinkedIn" },
    { icon: <FiCode />, href: "https://leetcode.com/YOUR_LEETCODE", label: "LeetCode" },
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.3,
        staggerChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.5 } }
  };

  return (
    <section id="home" className="min-h-screen flex items-center relative pt-16 overflow-hidden">
      {/* Background Effect */}
      <div className="absolute inset-0 bg-gradient-to-b from-secondary/20 to-dark z-0"></div>
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(14,165,233,0.15),transparent_70%)]"></div>
      
      <div className="container mx-auto px-4 relative z-10">
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate="visible"
          className="flex flex-col items-center text-center"
        >
          <motion.h2 
            variants={itemVariants}
            className="text-xl md:text-2xl text-primary mb-2 font-mono"
          >
            Hello, I'm
          </motion.h2>
          <motion.h1 
            variants={itemVariants}
            className="text-4xl md:text-6xl lg:text-7xl font-bold mb-4"
          >
            Nikhil Chavan
          </motion.h1>
          <motion.div 
            variants={itemVariants}
            className="text-xl md:text-2xl text-light/80 mb-8 font-mono h-12"
          >
            <TypewriterEffect
              options={{
                strings: [
                  'Software Developer',
                  'Machine Learning Engineer',
                  'Web Developer',
                  'Electronics Engineer'
                ],
                autoStart: true,
                loop: true,
              }}
            />
          </motion.div>
          
          <motion.div 
            variants={itemVariants}
            className="flex space-x-4 mb-12"
          >
            <a href="#projects" className="btn btn-primary">View Projects</a>
            <a href="#contact" className="btn btn-outline">Contact Me</a>
          </motion.div>
          
          <motion.div 
            variants={itemVariants}
            className="flex space-x-6 mb-16"
          >
            {socialLinks.map((link, index) => (
              <a 
                key={index}
                href={link.href}
                target="_blank"
                rel="noopener noreferrer"
                aria-label={link.label}
                className="text-2xl hover:text-primary transition-colors duration-300"
              >
                {link.icon}
              </a>
            ))}
          </motion.div>
          
          <motion.a
            href="#about"
            variants={itemVariants}
            className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
          >
            <motion.div
              animate={{ y: [0, 10, 0] }}
              transition={{ duration: 1.5, repeat: Infinity, ease: "easeInOut" }}
              className="text-primary text-2xl"
            >
              <FiArrowDown />
            </motion.div>
          </motion.a>
        </motion.div>
      </div>
    </section>
  );
}

// components/About.js
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { FiCalendar, FiMail, FiMapPin, FiPhone } from 'react-icons/fi';

export default function About() {
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1
  });

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.3,
        staggerChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.5 } }
  };

  return (
    <section id="about" className="py-20 bg-dark relative">
      <div className="container mx-auto px-4">
        <motion.div
          ref={ref}
          variants={containerVariants}
          initial="hidden"
          animate={inView ? "visible" : "hidden"}
          className="grid grid-cols-1 md:grid-cols-2 gap-10 items-center"
        >
          <motion.div variants={itemVariants}>
            <h2 className="section-title">About Me</h2>
            <p className="mb-4 text-light/80 leading-relaxed">
              Hello! I'm <span className="highlight">Nikhil Chavan</span>, a passionate Electronics and Telecommunications Engineering student with strong expertise in Machine Learning and Web Development.
            </p>
            <p className="mb-4 text-light/80 leading-relaxed">
              Currently pursuing my Bachelor's degree at Pune Institute of Computer Technology, I combine my strong academic background with practical experience in developing innovative solutions.
            </p>
            <p className="mb-6 text-light/80 leading-relaxed">
              I recently completed a Machine Learning internship at Mitu Skillologies where I developed an automated attendance system using OpenCV with 95% accuracy. I'm passionate about building solutions that blend hardware and software technologies.
            </p>
            
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 text-light/80">
              <div className="flex items-center space-x-2">
                <FiMail className="text-primary" />
                <span>nikhil.chavan2550@gmail.com</span>
              </div>
              <div className="flex items-center space-x-2">
                <FiPhone className="text-primary" />
                <span>+91-8766443531</span>
              </div>
              <div className="flex items-center space-x-2">
                <FiMapPin className="text-primary" />
                <span>Pune, India</span>
              </div>
              <div className="flex items-center space-x-2">
                <FiCalendar className="text-primary" />
                <span>BE (2022 - Present)</span>
              </div>
            </div>
          </motion.div>
          
          <motion.div variants={itemVariants} className="flex justify-center">
            <div className="relative w-64 h-64 md:w-80 md:h-80">
              {/* Profile image with design elements */}
              <div className="absolute inset-0 rounded-xl bg-gradient-to-br from-primary to-secondary opacity-20 blur-2xl"></div>
              <div className="absolute inset-0 border-2 border-primary/30 rounded-xl transform rotate-6"></div>
              <div className="absolute inset-0 border-2 border-secondary/30 rounded-xl transform -rotate-6"></div>
              {/* Replace with your actual image */}
              <div className="absolute inset-0 rounded-xl overflow-hidden bg-dark-light flex items-center justify-center">
                <span className="text-6xl text-primary font-bold">NC</span>
              </div>
            </div>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
}

// components/Experience.js
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { FiCalendar, FiBookOpen } from 'react-icons/fi';

export default function Experience() {
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1
  });

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.3,
        staggerChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.5 } }
  };

  const education = [
    {
      title: "BE Electronics and Telecommunications",
      institution: "Pune Institute of Computer Technology",
      duration: "2022 - Present",
      details: "CGPA: 8.24"
    },
    {
      title: "Mechanical Engineering",
      institution: "Government Polytechnic Pune",
      duration: "2019 - 2022",
      details: "Percentage: 93.53%"
    }
  ];

  const workExperience = [
    {
      title: "Machine Learning Intern",
      company: "Mitu Skillologies",
      duration: "Jan 2024 - Mar 2024",
      achievements: [
        "Developed an automated attendance system using OpenCV (Haar Cascades) for robust face detection, achieving 95% accuracy as measured against a manually annotated dataset of 1000+ images.",
        "Optimized detection to process over 50 live feeds with latency <1s and integrated SQLite to reduce data retrieval times by 65%."
      ]
    }
  ];

  return (
    <section id="experience" className="py-20 bg-dark-light relative">
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_top_right,rgba(99,102,241,0.15),transparent_70%)]"></div>
      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">My Journey</h2>
          <div className="w-24 h-1 bg-primary mx-auto"></div>
        </div>
        
        <motion.div
          ref={ref}
          variants={containerVariants}
          initial="hidden"
          animate={inView ? "visible" : "hidden"}
          className="grid grid-cols-1 lg:grid-cols-2 gap-16"
        >
          {/* Education Section */}
          <motion.div variants={itemVariants}>
            <div className="flex items-center mb-8">
              <FiBookOpen className="text-3xl text-primary mr-4" />
              <h3 className="text-2xl font-bold">Education</h3>
            </div>
            
            <div className="space-y-8">
              {education.map((item, index) => (
                <motion.div
                  key={index}
                  variants={itemVariants}
                  className="card relative border-l-4 border-primary pl-6"
                >
                  <div className="absolute w-4 h-4 bg-primary rounded-full left-[-10px] top-6"></div>
                  <h4 className="text-xl font-semibold">{item.title}</h4>
                  <p className="text-primary font-medium mb-1">{item.institution}</p>
                  <div className="flex items-center text-light/70 mb-2">
                    <FiCalendar className="mr-2" />
                    <span>{item.duration}</span>
                  </div>
                  <p className="text-light/80">{item.details}</p>
                </motion.div>
              ))}
            </div>
          </motion.div>
          
          {/* Work Experience Section */}
          <motion.div variants={itemVariants}>
            <div className="flex items-center mb-8">
              <FiCalendar className="text-3xl text-primary mr-4" />
              <h3 className="text-2xl font-bold">Work Experience</h3>
            </div>
            
            <div className="space-y-8">
              {workExperience.map((item, index) => (
                <motion.div
                  key={index}
                  variants={itemVariants}
                  className="card relative border-l-4 border-secondary pl-6"
                >
                  <div className="absolute w-4 h-4 bg-secondary rounded-full left-[-10px] top-6"></div>
                  <h4 className="text-xl font-semibold">{item.title}</h4>
                  <p className="text-primary font-medium mb-1">{item.company}</p>
                  <div className="flex items-center text-light/70 mb-4">
                    <FiCalendar className="mr-2" />
                    <span>{item.duration}</span>
                  </div>
                  <ul className="space-y-2 text-light/80">
                    {item.achievements.map((achievement, i) => (
                      <li key={i} className="pl-4 relative before:absolute before:content-[''] before:w-1.5 before:h-1.5 before:bg-primary before:rounded-full before:left-0 before:top-2">
                        {achievement}
                      </li>
                    ))}
                  </ul>
                </motion.div>
              ))}
            </div>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
}

// components/Skills.js
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { 
  FiCode, FiDatabase, FiServer, FiMonitor, FiTool, 
  FiLayers, FiPackage, FiHardDrive, FiTerminal
} from 'react-icons/fi';

export default function Skills() {
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1
  });

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.3,
        staggerChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.3 } }
  };

  const skillCategories = [
    {
      title: "Programming Languages",
      icon: <FiCode />,
      skills: ["C++", "Java", "MySQL", "Python", "JavaScript"]
    },
    {
      title: "Web Development",
      icon: <FiMonitor />,
      skills: ["React", "Node.js", "Express.js", "MongoDB", "Mongoose"]
    },
    {
      title: "Relevant Coursework",
      icon: <FiBookOpen />,
      skills: ["OOPS", "DSA", "DBMS", "Cloud Computing", "Deep Learning"]
    },
    {
      title: "Tools & Platforms",
      icon: <FiTool />,
      skills: ["Git", "VS Code", "GitHub", "Jupyter Notebook", "Docker", "Postman"]
    }
  ];

  return (
    <section id="skills" className="py-20 bg-dark relative">
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(14,165,233,0.1),transparent_70%)]"></div>
      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">Technical Skills</h2>
          <div className="w-24 h-1 bg-primary mx-auto"></div>
          <p className="mt-6 text-light/80 max-w-2xl mx-auto">
            Here are the technologies and tools I've worked with. I'm constantly learning and expanding my skillset.
          </p>
        </div>
        
        <motion.div
          ref={ref}
          variants={containerVariants}
          initial="hidden"
          animate={inView ? "visible" : "hidden"}
          className="grid grid-cols-1 md:grid-cols-2 gap-8"
        >
          {skillCategories.map((category, index) => (
            <motion.div
              key={index}
              variants={itemVariants}
              className="card"
            >
              <div className="flex items-center mb-6">
                <div className="text-primary text-2xl mr-3">
                  {category.icon}
                </div>
                <h3 className="text-xl font-bold">{category.title}</h3>
              </div>
              
              <div className="flex flex-wrap gap-3">
                {category.skills.map((skill, i) => (
                  <motion.div
                    key={i}
                    variants={itemVariants}
                    className="skill-item"
                  >
                    {skill}
                  </motion.div>
                ))}
              </div>
            </motion.div>
          ))}
        </motion.div>
        
        {/* Progress Bars for Key Skills */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate={inView ? "visible" : "hidden"}
          className="mt-16 max-w-3xl mx-auto"
        >
          <h3 className="text-xl font-semibold mb-6 text-center">Skill Proficiency</h3>
          
          {[
            { skill: "Machine Learning", level: 85 },
            { skill: "React & Frontend", level: 80 },
            { skill: "Node.js & Backend", level: 75 },
            { skill: "Database Design", level: 70 },
            { skill: "Data Structures & Algorithms", level: 85 }
          ].map((item, index) => (
            <motion.div key={index} variants={itemVariants} className="mb-4">
              <div className="flex justify-between mb-1">
                <span>{item.skill}</span>
                <span>{item.level}%</span>
              </div>
              <div className="w-full h-2 bg-dark-light rounded-full overflow-hidden">
                <motion.div 
                  className="h-full bg-gradient-to-r from-primary to-secondary"
                  initial={{ width: 0 }}
                  animate={{ width: `${item.level}%` }}
                  transition={{ duration: 1, delay: 0.3 + (index * 0.1) }}
                ></motion.div>
              </div>
            </motion.div>
          ))}
        </motion.div>
      </div>
    </section>
  );
}

// components/Projects.js
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { FiGithub, FiExternalLink, FiCode } from 'react-icons/fi';

export default function Projects() {
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1
  });

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.3,
        staggerChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.5 } }
  };

  const projects = [
    {
      title: "SkillCrafter",
      description: "A skill-sharing platform enabling profile creation, skill exchange, and real-time chat via Socket.io.",
      technologies: ["React", "Node.js", "MongoDB", "JWT", "Socket.io"],
      points: [
        "Integrated JWT authentication and Socket.io for secure real-time chat", 
        "Enhanced functionality with React hooks, MongoDB aggregation, and Express middleware for scalability"
      ],
      github: "#",
      demo: "#"
    },
    {
      title: "ML Expert",
      description: "An end-to-end machine learning platform with automated data processing, model training, and evaluation.",
      technologies: ["Python", "XGBoost", "Keras", "Pandas", "Matplotlib"],
      points: [
        "Automated data ingestion and preprocessing using Pandas with visual EDA powered by Matplotlib",
        "Integrated and fine-tuned diverse ML models using XGBoost and Keras, with ML chat assistance using Ollama"
      ],
      github: "#",
      demo: "#"
    },
    {
      title: "HealthConnect",
      description: "A healthcare platform for real-time doctor availability, appointment booking, and secure messaging.",
      technologies: ["React", "Node.js", "Express.js", "MongoDB"],
      points: [
        "Developed a healthcare platform for real-time doctor availability and appointment booking",
        "Designed an intuitive scheduler that streamlines doctor consultations and patient communications"
      ],
      github: "#",
      demo: "#"
    }
  ];

  return (
    <section id="projects" className="py-20 bg-dark-light relative">
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_right,rgba(14,165,233,0.15),transparent_70%)]"></div>
      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">Featured Projects</h2>
          <div className="w-24 h-1 bg-primary mx-auto"></div>
          <p className="mt-6 text-light/80 max-w-2xl mx-auto">
            Here are some of the projects I've worked on. Each project represents my skills and experience in different areas.
          </p>
        </div>
        
        <motion.div
          ref={ref}
          variants={containerVariants}
          initial="hidden"
          animate={inView ? "visible" : "hidden"}
          className="space-y-16"
        >
          {projects.map((project, index) => (
            <motion.div
              key={index}
              variants={itemVariants}
              className="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center"
              style={{ direction: index % 2 === 1 ? 'rtl' : 'ltr' }}
            >
              {/* Project Image/Display */}
              <div style={{ direction: 'ltr' }} className="bg-dark rounded-lg overflow-hidden relative group">
                <div className="aspect-w-16 aspect-h-9 w-full h-64 bg-gradient-to-br from-primary/10 to-secondary/10 flex items-center justify-center overflow-hidden">
                  <div className="text-6xl text-primary/30 font-bold">{project.title.substring(0, 2)}</div>
                  <div className="absolute inset-0 bg-dark/80 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center space-x-4">
                    <a 
                      href={project.github} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="text-light hover:text-primary transition-colors duration-300 bg-dark/50 p-3 rounded-full"
                    >
                      <FiGithub className="w-6 h-6" />
                    </a>
                    <a 
                      href={project.demo} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="text-light hover:text-primary transition-colors duration-300 bg-dark/50 p-3 rounded-full"
                    >
                      <FiExternalLink className="w-6 h-6" />
                    </a>
                  </div>
                </div>
              </div>
              
              {/* Project Info */}
              <div style={{ direction: 'ltr' }} className="space-y-4">
                <h3 className="text-2xl font-bold">{project.title}</h3>
                <p className="text-light/80">{project.description}</p>
                
                <ul className="space-y-2 text-light/80">
                  {project.points.map((point, i) => (
                    <li key={i} className="pl-4 relative before:absolute before:content-[''] before:w-1.5 before:h-1.5 before:bg-primary before:rounded-full before:left-0 before:top-2">
                      {point}
                    </li>
                  ))}
                </ul>
                
                <div className="flex flex-wrap gap-2 mt-4">
                  {project.technologies.map((tech, i) => (
                    <span key={i} className="px-3 py-1 bg-dark rounded-full text-xs">
                      {tech}
                    </span>
                  ))}
                </div>
                
                <div className="pt-4 flex space-x-4">
                  <a 
                    href={project.github} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="btn btn-outline text-sm flex items-center space-x-2"
                  >
                    <FiGithub />
                    <span>View Code</span>
                  </a>
                  <a 
                    href={project.demo} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="btn btn-primary text-sm flex items-center space-x-2"
                  >
                    <FiExternalLink />
                    <span>Live Demo</span>
                  </a>
                </div>
              </div>
            </motion.div>
          ))}
        </motion.div>
        
        {/* Achievements Section */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate={inView ? "visible" : "hidden"}
          className="mt-20"
        >
          <h3 className="text-2xl font-bold mb-8 text-center">Achievements & Publications</h3>
          
          <motion.div variants={itemVariants} className="card border-t-4 border-primary">
            <h4 className="text-xl font-semibold mb-2">Research Publication</h4>
            <p className="text-light/80 mb-4">
              Published a research paper on SMEG Signal Detection and Analysis for Prosthetic Arm Control at SmartCom India.
            </p>
            
            <h4 className="text-xl font-semibold mb-2 mt-6">Competitions</h4>
            <p className="text-light/80">
              Won several state and national-level paper presentation competitions, demonstrating strong communication and technical research skills.
            </p>
          </motion.div>
          
          <motion.div variants={itemVariants} className="card border-t-4 border-secondary mt-8">
            <h4 className="text-xl font-semibold mb-4">Certifications</h4>
            <ul className="space-y-2 text-light/80">
              <li className="pl-4 relative before:absolute before:content-[''] before:w-1.5 before:h-1.5 before:bg-primary before:rounded-full before:left-0 before:top-2">
                SQL Mathematical Functions - Coursera Project Network
              </li>
              <li className="pl-4 relative before:absolute before:content-[''] before:w-1.5 before:h-1.5 before:bg-primary before:rounded-full before:left-0 before:top-2">
                Introduction to Generative AI - Google Cloud
              </li>
              <li className="pl-4 relative before:absolute before:content-[''] before:w-1.5 before:h-1.5 before:bg-primary before:rounded-full before:left-0 before:top-2">
                Introduction to Large Language Models - Google Cloud
              </li>
            </ul>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
}

// components/Contact.js
import { useState } from 'react';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { FiMail, FiPhone, FiMapPin, FiSend, FiGithub, FiLinkedin, FiCode } from 'react-icons/fi';

export default function Contact() {
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1
  });
  
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    subject: '',
    message: ''
  });
  
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitMessage, setSubmitMessage] = useState('');
  
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value
    });
  };
  
  const handleSubmit = (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate form submission
    setTimeout(() => {
      setIsSubmitting(false);
      setSubmitMessage('Thank you for your message! I will get back to you soon.');
      setFormData({
        name: '',
        email: '',
        subject: '',
        message: ''
      });
      
      // Clear the success message after 5 seconds
      setTimeout(() => {
        setSubmitMessage('');
      }, 5000);
    }, 1500);
  };
  
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.3,
        staggerChildren: 0.2
      }
    }
  };
  
  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.5 } }
  };
  
  return (
    <section id="contact" className="py-20 bg-dark relative">
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_bottom_left,rgba(99,102,241,0.15),transparent_70%)]"></div>
      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold mb-4">Get In Touch</h2>
          <div className="w-24 h-1 bg-primary mx-auto"></div>
          <p className="mt-6 text-light/80 max-w-2xl mx-auto">
            Feel free to contact me for any work or suggestions below
          </p>
        </div>
        
        <motion.div
          ref={ref}
          variants={containerVariants}
          initial="hidden"
          animate={inView ? "visible" : "hidden"}
          className="grid grid-cols-1 md:grid-cols-3 gap-8"
        >
          {/* Contact Information */}
          <motion.div variants={itemVariants} className="md:col-span-1">
            <div className="card h-full">
              <h3 className="text-xl font-bold mb-6">Contact Information</h3>
              
              <div className="space-y-4">
                <div className="flex items-start space-x-4">
                  <div className="bg-primary/20 p-3 rounded-full text-primary">
                    <FiMail />
                  </div>
                  <div>
                    <h4 className="font-medium">Email</h4>
                    <p className="text-light/80">nikhil.chavan2550@gmail.com</p>
                  </div>
                </div>
                
                <div className="flex items-start space-x-4">
                  <div className="bg-primary/20 p-3 rounded-full text-primary">
                    <FiPhone />
                  </div>
                  <div>
                    <h4 className="font-medium">Phone</h4>
                    <p className="text-light/80">+91-8766443531</p>
                  </div>
                </div>
                
                <div className="flex items-start space-x-4">
                  <div className="bg-primary/20 p-3 rounded-full text-primary">
                    <FiMapPin />
                  </div>
                  <div>
                    <h4 className="font-medium">Location</h4>
                    <p className="text-light/80">Pune, India</p>
                  </div>
                </div>
              </div>
              
              <div className="mt-10">
                <h4 className="font-medium mb-4">Find me on</h4>
                <div className="flex space-x-4">
                  <a 
                    href="https://github.com/YOUR_GITHUB" 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="bg-dark p-3 rounded-full text-light/80 hover:text-primary transition-colors duration-300"
                  >
                    <FiGithub />
                  </a>
                  <a 
                    href="https://linkedin.com/in/YOUR_LINKEDIN" 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="bg-dark p-3 rounded-full text-light/80 hover:text-primary transition-colors duration-300"
                  >
                    <FiLinkedin />
                  </a>
                  <a 
                    href="https://leetcode.com/YOUR_LEETCODE" 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="bg-dark p-3 rounded-full text-light/80 hover:text-primary transition-colors duration-300"
                  >
                    <FiCode />
                  </a>
                </div>
              </div>
            </div>
          </motion.div>
          
          {/* Contact Form */}
          <motion.div variants={itemVariants} className="md:col-span-2">
            <div className="card">
              <h3 className="text-xl font-bold mb-6">Send Me a Message</h3>
              
              {submitMessage && (
                <div className="mb-6 bg-primary/20 py-3 px-4 rounded-md text-primary">
                  {submitMessage}
                </div>
              )}
              
              <form onSubmit={handleSubmit}>
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-6 mb-6">
                  <div>
                    <label htmlFor="name" className="block mb-2 text-sm">Your Name</label>
                    <input
                      type="text"
                      id="name"
                      name="name"
                      value={formData.name}
                      onChange={handleChange}
                      className="w-full px-4 py-3 bg-dark border border-dark-light rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50 text-light"
                      required
                    />
                  </div>
                  
                  <div>
                    <label htmlFor="email" className="block mb-2 text-sm">Your Email</label>
                    <input
                      type="email"
                      id="email"
                      name="email"
                      value={formData.email}
                      onChange={handleChange}
                      className="w-full px-4 py-3 bg-dark border border-dark-light rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50 text-light"
                      required
                    />
                  </div>
                </div>
                
                <div className="mb-6">
                  <label htmlFor="subject" className="block mb-2 text-sm">Subject</label>
                  <input
                    type="text"
                    id="subject"
                    name="subject"
                    value={formData.subject}
                    onChange={handleChange}
                    className="w-full px-4 py-3 bg-dark border border-dark-light rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50 text-light"
                    required
                  />
                </div>
                
                <div className="mb-6">
                  <label htmlFor="message" className="block mb-2 text-sm">Your Message</label>
                  <textarea
                    id="message"
                    name="message"
                    rows="5"
                    value={formData.message}
                    onChange={handleChange}
                    className="w-full px-4 py-3 bg-dark border border-dark-light rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50 text-light resize-none"
                    required
                  ></textarea>
                </div>
                
                <button
                  type="submit"
                  disabled={isSubmitting}
                  className="btn btn-primary flex items-center space-x-2"
                >
                  {isSubmitting ? (
                    <span>Sending...</span>
                  ) : (
                    <>
                      <FiSend />
                      <span>Send Message</span>
                    </>
                  )}
                </button>
              </form>
            </div>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
}

// components/Footer.js
import { FiGithub, FiLinkedin, FiCode, FiHeart } from 'react-icons/fi';

export default function Footer() {
  const currentYear = new Date().getFullYear();
  
  return (
    <footer className="bg-dark-light py-8">
      <div className="container mx-auto px-4">
        <div className="flex flex-col md:flex-row justify-between items-center">
          <div className="text-center md:text-left mb-4 md:mb-0">
            <h3 className="text-lg font-semibold">
              <span className="text-primary">Nikhil</span> Chavan
            </h3>
            <p className="text-sm text-light/70">Electronics Engineer & Web Developer</p>
          </div>
          
          <div className="flex space-x-6 mb-4 md:mb-0">
            <a 
              href="https://github.com/YOUR_GITHUB" 
              target="_blank" 
              rel="noopener noreferrer"
              className="text-light/70 hover:text-primary transition-colors duration-300"
            >
              <FiGithub />
            </a>
            <a 
              href="https://linkedin.com/in/YOUR_LINKEDIN" 
              target="_blank" 
              rel="noopener noreferrer"
              className="text-light/70 hover:text-primary transition-colors duration-300"
            >
              <FiLinkedin />
            </a>
            <a 
              href="https://leetcode.com/YOUR_LEETCODE" 
              target="_blank" 
              rel="noopener noreferrer"
              className="text-light/70 hover:text-primary transition-colors duration-300"
            >
              <FiCode />
            </a>
          </div>
          
          <div className="text-center md:text-right text-sm text-light/70">
            <p className="flex items-center justify-center md:justify-end space-x-1">
              <span>© {currentYear} Nikhil Chavan. All rights reserved.</span>
              <FiHeart className="text-primary" />
            </p>
          </div>
        </div>
      </div>
    </footer>
  );